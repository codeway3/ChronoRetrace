# Type stubs for SQLAlchemy models
import enum
from typing import Any

from sqlalchemy.ext.declarative import DeclarativeMeta

class Base(metaclass=DeclarativeMeta):
    def __init__(self, **kwargs: Any) -> None: ...

class StockData(Base):
    __tablename__: Any
    id: Any
    ts_code: Any
    trade_date: Any
    open: Any
    high: Any
    low: Any
    close: Any
    pre_close: Any
    change: Any
    pct_chg: Any
    vol: Any
    amount: Any
    interval: Any

class StockInfo(Base):
    __tablename__: str
    ts_code: Any
    name: Any
    market_type: Any
    last_updated: Any

class DailyStockMetrics(Base):
    __tablename__: str
    id: Any
    code: Any
    date: Any
    market: Any
    close_price: Any
    pe_ratio: Any
    pb_ratio: Any
    market_cap: Any
    dividend_yield: Any
    ma5: Any
    ma20: Any
    volume: Any
    updated_at: Any

class AssetSymbol(Base):
    __tablename__: str
    id: Any
    asset_type: Any
    symbol: Any
    name: Any
    full_name: Any
    exchange: Any
    sector: Any
    industry: Any
    market_cap: Any
    currency: Any
    lot_size: Any
    tick_size: Any
    is_active: Any
    is_tradable: Any
    listing_date: Any
    delisting_date: Any
    extra_data: Any
    created_at: Any
    updated_at: Any

class AnnualEarnings(Base):
    __tablename__: Any
    id: Any
    symbol: Any
    year: Any
    net_profit: Any
    last_updated: Any

class CorporateAction(Base):
    __tablename__: Any
    id: Any
    symbol: Any
    action_type: Any
    ex_date: Any
    value: Any

class FundamentalData(Base):
    __tablename__: Any
    id: Any
    symbol: Any
    market_cap: Any
    pe_ratio: Any
    dividend_yield: Any
    eps: Any
    beta: Any
    gross_profit_margin: Any
    net_profit_margin: Any
    roe: Any
    revenue_growth_rate: Any
    net_profit_growth_rate: Any
    debt_to_asset_ratio: Any
    current_ratio: Any
    last_updated: Any
    dv_ttm: Any
    total_mv: Any
    circ_mv: Any

class IndustryClassification(Base):
    __tablename__: Any
    ts_code: Any
    industry_code: Any
    industry_name: Any
    src: Any
    level: Any
    industry_code_new: Any
    industry_name_new: Any

class DataQualityLog(Base):
    __tablename__: Any
    id: Any
    record_id: Any
    table_name: Any
    operation_type: Any
    status: Any
    message: Any
    error_details: Any
    execution_time: Any
    created_at: Any

class User(Base):
    __tablename__: Any
    id: Any
    username: Any
    email: Any
    phone: Any
    password_hash: Any
    full_name: Any
    avatar_url: Any
    is_active: Any
    is_locked: Any
    created_at: Any
    updated_at: Any
    last_login_at: Any

class UserRole(Base):
    __tablename__: Any
    id: Any
    name: Any
    description: Any
    permissions: Any
    created_at: Any

class UserRoleAssignment(Base):
    __tablename__: Any
    id: Any
    user_id: Any
    role_id: Any
    assigned_at: Any
    assigned_by: Any

class UserPreferences(Base):
    __tablename__: Any
    id: Any
    user_id: Any
    theme_mode: Any
    language: Any
    timezone: Any
    currency: Any
    # 通知设置
    email_notifications: Any
    sms_notifications: Any
    push_notifications: Any
    # 数据展示偏好
    default_chart_type: Any
    default_period: Any
    preferred_indicators: Any
    # 投资偏好
    risk_tolerance: Any
    investment_goal: Any
    investment_horizon: Any
    # 其他偏好
    currency_preference: Any
    created_at: Any
    updated_at: Any

class UserSession(Base):
    __tablename__: Any
    id: Any
    user_id: Any
    session_token: Any
    refresh_token: Any
    device_info: Any
    ip_address: Any
    user_agent: Any
    is_active: Any
    created_at: Any
    last_accessed_at: Any
    expires_at: Any

class UserActivityLog(Base):
    __tablename__: Any
    id: Any
    user_id: Any
    action: Any
    resource: Any
    details: Any
    ip_address: Any
    user_agent: Any
    success: Any
    error_message: Any
    created_at: Any

# Additional models present in models.py (add stubs to satisfy type checker)

class AssetType(enum.Enum): ...
class AssetConfigStatus(enum.Enum): ...

class AssetConfig(Base):
    __tablename__: Any
    id: Any
    asset_type: Any
    name: Any
    display_name: Any
    description: Any
    supported_functions: Any
    screener_config: Any
    backtest_config: Any
    data_source_config: Any
    status: Any
    is_enabled: Any
    sort_order: Any
    created_at: Any
    updated_at: Any

class AssetMarketData(Base):
    __tablename__: Any
    id: Any
    asset_type: Any
    symbol: Any
    open_price: Any
    high_price: Any
    low_price: Any
    close_price: Any
    volume: Any
    turnover: Any
    change_amount: Any
    change_percent: Any
    amplitude: Any
    ma5: Any
    ma10: Any
    ma20: Any
    ma60: Any
    pe_ratio: Any
    pb_ratio: Any
    ps_ratio: Any
    dividend_yield: Any
    open_interest: Any
    settlement_price: Any
    implied_volatility: Any
    market_cap_rank: Any
    circulating_supply: Any
    total_supply: Any
    trade_date: Any
    data_timestamp: Any
    created_at: Any
    updated_at: Any

class AssetScreenerTemplate(Base):
    __tablename__: Any
    id: Any
    asset_type: Any
    name: Any
    description: Any
    criteria: Any
    is_public: Any
    is_system: Any
    usage_count: Any
    created_by: Any
    created_at: Any
    updated_at: Any

class AssetBacktestTemplate(Base):
    __tablename__: Any
    id: Any
    asset_type: Any
    name: Any
    description: Any
    strategy_type: Any
    strategy_config: Any
    backtest_config: Any
    is_public: Any
    is_system: Any
    usage_count: Any
    created_by: Any
    created_at: Any
    updated_at: Any

class UserWatchlist(Base):
    __tablename__: Any
    id: Any
    user_id: Any
    name: Any
    description: Any
    is_public: Any
    is_default: Any
    sort_order: Any
    created_at: Any
    updated_at: Any

class UserWatchlistItem(Base):
    __tablename__: Any
    id: Any
    watchlist_id: Any
    symbol: Any
    market: Any
    added_at: Any
    notes: Any
    target_price: Any
    stop_loss_price: Any
    sort_order: Any
    price_alert_enabled: Any
    price_alert_threshold: Any
    volume_alert_enabled: Any

class UserPortfolio(Base):
    __tablename__: Any
    id: Any
    user_id: Any
    name: Any
    description: Any
    initial_capital: Any
    current_value: Any
    total_return: Any
    total_return_pct: Any
    created_at: Any
    updated_at: Any

class UserPortfolioHolding(Base):
    __tablename__: Any
    id: Any
    portfolio_id: Any
    symbol: Any
    market: Any
    quantity: Any
    average_cost: Any
    current_price: Any
    market_value: Any
    unrealized_pnl: Any
    unrealized_pnl_pct: Any
    first_purchase_date: Any
    last_update_date: Any

class UserTransaction(Base):
    __tablename__: Any
    id: Any
    portfolio_id: Any
    symbol: Any
    market: Any
    transaction_type: Any
    quantity: Any
    price: Any
    commission: Any
    total_amount: Any
    transaction_date: Any
    notes: Any
    created_at: Any
