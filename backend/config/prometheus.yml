# ChronoRetrace Prometheus 监控配置
# 用于收集、存储和查询系统指标

# 全局配置
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'chronoretrace-prod'
    environment: 'production'

# 规则文件配置
rule_files:
  - "rules/*.yml"
  - "alerts/*.yml"

# 告警管理器配置
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      timeout: 10s
      api_version: v2

# 抓取配置
scrape_configs:
  # Prometheus自身监控
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # ChronoRetrace后端API监控
  - job_name: 'chronoretrace-backend'
    static_configs:
      - targets:
          - 'backend-1:8000'
          - 'backend-2:8000'
          - 'backend-3:8000'
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    
    # 标签
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__address__]
        regex: '(.*):(\d+)'
        target_label: __address__
        replacement: '${1}:${2}'
    
    # 指标过滤
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*'
        action: drop
      - source_labels: [__name__]
        regex: 'process_.*'
        action: drop

  # ChronoRetrace前端监控
  - job_name: 'chronoretrace-frontend'
    static_configs:
      - targets:
          - 'frontend-1:3000'
          - 'frontend-2:3000'
    scrape_interval: 30s
    metrics_path: /metrics

  # PostgreSQL数据库监控
  - job_name: 'postgres'
    static_configs:
      - targets:
          - 'postgres-exporter:9187'
    scrape_interval: 30s
    
    # PostgreSQL特定配置
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: postgres-exporter:9187

  # Redis监控
  - job_name: 'redis'
    static_configs:
      - targets:
          - 'redis-exporter:9121'
    scrape_interval: 30s
    
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: redis-exporter:9121

  # Nginx负载均衡器监控
  - job_name: 'nginx'
    static_configs:
      - targets:
          - 'nginx-exporter:9113'
    scrape_interval: 30s
    metrics_path: /metrics

  # HAProxy负载均衡器监控
  - job_name: 'haproxy'
    static_configs:
      - targets:
          - 'haproxy-exporter:8404'
    scrape_interval: 30s
    metrics_path: /stats/prometheus

  # Node Exporter (系统指标)
  - job_name: 'node-exporter'
    static_configs:
      - targets:
          - 'node-exporter-1:9100'
          - 'node-exporter-2:9100'
          - 'node-exporter-3:9100'
    scrape_interval: 30s
    
    # 系统指标标签
    relabel_configs:
      - source_labels: [__address__]
        regex: '(.*):(\d+)'
        target_label: node
        replacement: '${1}'

  # cAdvisor (容器指标)
  - job_name: 'cadvisor'
    static_configs:
      - targets:
          - 'cadvisor-1:8080'
          - 'cadvisor-2:8080'
          - 'cadvisor-3:8080'
    scrape_interval: 30s
    metrics_path: /metrics
    
    # 容器指标过滤
    metric_relabel_configs:
      - source_labels: [container_label_com_docker_compose_service]
        target_label: service
      - source_labels: [__name__]
        regex: 'container_.*'
        action: keep

  # Kubernetes API Server (如果使用K8s)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
            - kube-system
    
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes节点监控
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes Pod监控
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # 自定义业务指标
  - job_name: 'chronoretrace-business-metrics'
    static_configs:
      - targets:
          - 'backend-1:8000'
          - 'backend-2:8000'
    scrape_interval: 60s
    metrics_path: /api/metrics/business
    
    # 业务指标特定配置
    params:
      format: ['prometheus']
    
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'chronoretrace_.*'
        action: keep

  # 外部服务监控
  - job_name: 'external-services'
    static_configs:
      - targets:
          - 'blackbox-exporter:9115'
    scrape_interval: 60s
    metrics_path: /probe
    
    params:
      module: [http_2xx]
      target:
        - 'https://api.example.com/health'
        - 'https://chronoretrace.com/health'
    
    relabel_configs:
      - source_labels: [__param_target]
        target_label: instance
      - source_labels: [__param_target]
        target_label: __param_target
      - target_label: __address__
        replacement: blackbox-exporter:9115

# 远程写入配置（可选，用于长期存储）
remote_write:
  - url: "https://prometheus-remote-storage.example.com/api/v1/write"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
    
    # 写入过滤
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*|process_.*'
        action: drop

# 远程读取配置（可选）
remote_read:
  - url: "https://prometheus-remote-storage.example.com/api/v1/read"
    read_recent: true

# 存储配置
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 50GB
    wal-compression: true
    
    # 压缩配置
    min-block-duration: 2h
    max-block-duration: 25h
    
    # 性能优化
    no-lockfile: false
    allow-overlapping-blocks: false

# Web配置
web:
  listen-address: '0.0.0.0:9090'
  max-connections: 512
  read-timeout: 30s
  
  # 外部URL配置
  external-url: 'https://prometheus.chronoretrace.com'
  
  # 控制台模板
  console.templates: '/etc/prometheus/consoles'
  console.libraries: '/etc/prometheus/console_libraries'

# 日志配置
log:
  level: info
  format: json