# ============================================================================
# ChronoRetrace Kubernetes ConfigMaps
# Non-sensitive configuration data
# ============================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: chronoretrace-config
  namespace: chronoretrace
  labels:
    app: chronoretrace
    component: config
data:
  # Environment
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"

  # Database Configuration
  DATABASE_POOL_SIZE: "20"
  DATABASE_MAX_OVERFLOW: "30"
  DATABASE_POOL_TIMEOUT: "30"
  DATABASE_POOL_RECYCLE: "3600"

  # Redis Configuration
  REDIS_DB: "0"
  REDIS_MAX_CONNECTIONS: "50"
  REDIS_RETRY_ON_TIMEOUT: "true"

  # JWT Configuration
  JWT_ALGORITHM: "HS256"
  JWT_ACCESS_TOKEN_EXPIRE_MINUTES: "15"
  JWT_REFRESH_TOKEN_EXPIRE_DAYS: "7"

  # Security Settings
  PASSWORD_HASH_ALGORITHM: "bcrypt" # pragma: allowlist secret
  PASSWORD_MIN_LENGTH: "12" # pragma: allowlist secret
  SESSION_EXPIRE_HOURS: "8"
  SECURE_COOKIES: "true"
  HTTPS_ONLY: "true"

  # API Rate Limiting
  RATE_LIMIT_REQUESTS_PER_MINUTE: "60"
  RATE_LIMIT_BURST_SIZE: "10"
  RATE_LIMIT_ENABLED: "true"

  # CORS Configuration
  CORS_ALLOW_CREDENTIALS: "true"
  CORS_ALLOW_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
  CORS_ALLOW_HEADERS: "Content-Type,Authorization,X-Requested-With"

  # Cache Configuration
  CACHE_TTL_SECONDS: "1800"
  CACHE_ENABLED: "true"
  CACHE_PREFIX: "chronoretrace:prod"
  CACHE_COMPRESSION: "true"
  CACHE_SERIALIZER: "pickle"

  # Performance Settings
  WORKERS: "4"
  MAX_CONNECTIONS: "1000"
  KEEP_ALIVE: "5"
  TIMEOUT_KEEP_ALIVE: "5"
  TIMEOUT_GRACEFUL_SHUTDOWN: "30"

  # Monitoring
  MONITORING_ENABLED: "true"
  METRICS_ENABLED: "true"
  HEALTH_CHECK_ENABLED: "true"
  PERFORMANCE_MONITORING: "true"
  ERROR_TRACKING_ENABLED: "true"

  # File Upload
  MAX_FILE_SIZE: "52428800"  # 50MB
  UPLOAD_PATH: "/app/uploads"
  ALLOWED_FILE_TYPES: "csv,xlsx,json"

  # Email Configuration
  SMTP_PORT: "587"
  SMTP_USE_TLS: "true"

  # Backup Configuration
  BACKUP_ENABLED: "true"
  BACKUP_INTERVAL_HOURS: "6"
  BACKUP_RETENTION_DAYS: "30"

  # Feature Flags
  FEATURE_REAL_TIME_DATA: "true"
  FEATURE_ADVANCED_ANALYTICS: "true"
  FEATURE_SOCIAL_FEATURES: "false"
  FEATURE_MOBILE_APP: "true"
  FEATURE_API_VERSIONING: "true"

  # Security Headers
  SECURITY_HEADERS_ENABLED: "true"
  HSTS_MAX_AGE: "31536000"
  CSP_POLICY: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"

  # API Documentation
  API_DOCS_ENABLED: "false"
  API_DOCS_URL: "/docs"

  # Maintenance Mode
  MAINTENANCE_MODE: "false"
  MAINTENANCE_MESSAGE: "System is under maintenance. Please try again later."

  # Resource Limits
  MAX_REQUEST_SIZE: "10485760"  # 10MB
  MAX_CONCURRENT_REQUESTS: "1000"
  REQUEST_TIMEOUT: "30"

  # Data Retention
  DATA_RETENTION_DAYS: "365"
  LOG_RETENTION_DAYS: "90"
  METRICS_RETENTION_DAYS: "30"

  # Logging Configuration
  LOG_FORMAT: "json"
  LOG_FILE_PATH: "/app/logs/app.log"
  LOG_MAX_SIZE: "100MB"
  LOG_BACKUP_COUNT: "10"
  LOG_ROTATION: "daily"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chronoretrace-nginx-config
  namespace: chronoretrace
  labels:
    app: chronoretrace
    component: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 16M;

        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        upstream backend {
            server chronoretrace-backend:8000;
        }

        server {
            listen 80;
            server_name _;

            location /api/ {
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_read_timeout 300s;
                proxy_connect_timeout 75s;
            }

            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            location / {
                root /usr/share/nginx/html;
                index index.html index.htm;
                try_files $uri $uri/ /index.html;
            }
        }
    }
