[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chronoretrace"
version = "0.1.0"
description = "A comprehensive financial data analysis and backtesting platform"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "ChronoRetrace Team", email = "team@chronoretrace.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
]

[project.urls]
Homepage = "https://github.com/chronoretrace/chronoretrace"
Repository = "https://github.com/chronoretrace/chronoretrace"
Issues = "https://github.com/chronoretrace/chronoretrace/issues"

[tool.setuptools.packages.find]
where = ["backend"]

# ============================================================================
# TOOL CONFIGURATIONS
# ============================================================================

[tool.ruff]
# Ruff configuration
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "UP",
    "ARG",
    "SIM",
    "TCH",
    "PTH",
    "ERA",
    "PL",
    "TRY",
    "RUF",
]
ignore = [
    "E501",
    "B008",
    "C901",
    "PLR0913",
    "PLR0915",
    "PLR0912",
    "TRY003",
    "RUF002",
    "RUF003",
    "PLR0911",  # 临时忽略：return 分支过多
    "PLR2004",  # 临时忽略：魔法数字
    "B904",     # 临时忽略：raise ... from err
    "RUF001",   # 临时忽略：Unicode 模糊字符（中文输出场景）
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"backend/tests/*" = ["ARG", "PLR2004", "S101", "TID252", "E402", "F401"]
"backend/app/main.py" = ["B008"]
"backend/app/schemas/stock.py" = ["E402", "UP007"]
"backend/scripts/setup_postgres.py" = ["E402", "TRY300", "S603"]
"backend/scripts/monitoring_health_check.py" = ["PTH", "PTH100", "PTH123", "TRY401", "TID252", "ARG", "DTZ005", "C901", "PLC0415"]
"backend/scripts/deploy_monitoring.py" = ["S603", "PTH", "PTH123", "TRY401", "ARG", "DTZ005", "TID252", "E722", "PLC0415", "TRY002", "TRY300"]
"backend/app/services/auth_service.py" = ["D400", "D415", "COM812", "DTZ003", "TRY300"]
"backend/app/services/stock_service.py" = ["D400", "D415", "COM812", "RUF002", "TRY", "TRY300", "ARG"]
"backend/app/websocket/connection_manager.py" = ["D400", "D415", "RUF002", "COM812", "TRY", "ARG", "SIM"]
"backend/app/websocket/data_stream_service.py" = ["D400", "D415", "RUF002", "COM812", "TRY", "ARG", "SIM"]
"backend/app/websocket/message_handler.py" = ["D400", "D415", "RUF002", "COM812", "TRY", "ARG", "SIM"]

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

# [tool.mypy]
# MyPy configuration removed - not actively maintained
# If you want to re-enable type checking in the future, uncomment and configure as needed

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = ["backend"]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=backend/app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80",
]
testpaths = ["backend/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"'",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
    "database: marks tests that require database",
    "redis: marks tests that require Redis",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["backend/app"]
omit = [
    "backend/tests/*",
    "backend/app/main.py",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == \"__main__\":",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["backend/tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]
