[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chronoretrace"
version = "0.1.0"
description = "A comprehensive financial data analysis and backtesting platform"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "ChronoRetrace Team", email = "team@chronoretrace.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
]

[project.urls]
Homepage = "https://github.com/chronoretrace/chronoretrace"
Repository = "https://github.com/chronoretrace/chronoretrace"
Issues = "https://github.com/chronoretrace/chronoretrace/issues"

[tool.setuptools.packages.find]
where = ["backend"]

# ============================================================================
# TOOL CONFIGURATIONS
# ============================================================================

[tool.ruff]
# Ruff configuration
target-version = "py310"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "TRY", # tryceratops
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by black
    "B008",   # do not perform function calls in argument defaults
    "C901",   # too complex
    "PLR0913", # too many arguments
    "PLR0915", # too many statements
    "PLR0912", # too many branches (common in decorators and control-heavy utilities)
    "TRY003", # avoid specifying long messages outside the exception class
    "RUF002", # allow fullwidth punctuation in docstrings (Chinese content)
    "RUF003", # allow fullwidth punctuation in comments (Chinese content)
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"backend/tests/*" = ["ARG", "PLR2004", "S101", "TID252"]
"backend/app/main.py" = ["B008"]

[tool.ruff.isort]
known-first-party = ["app"]

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

# [tool.mypy]
# MyPy configuration removed - not actively maintained
# If you want to re-enable type checking in the future, uncomment and configure as needed

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = ["backend"]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=backend/app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80",
]
testpaths = ["backend/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"'",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
    "database: marks tests that require database",
    "redis: marks tests that require Redis",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["backend/app"]
omit = [
    "backend/tests/*",
    "backend/app/main.py",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == \"__main__\":",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["backend/tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]
